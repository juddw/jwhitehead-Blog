@model jwhitehead_Blog.Models.CodeFirst.Post

@{
    ViewBag.Title = "Details";
}

<!-- ==============================================
   BLOG DETAILS
   =============================================== -->

<div class="row bg-color2" style="padding-bottom: 30px;">


    @if (Model.MediaUrl == null)
    {
        // no image available so format wider.
        <div class="col-sm-10 scrollimation fade-left d3" style="margin-left: 30px;">

            <p class="lead" style="font-weight: 500; font-size: 100%; margin-top: 20px;">
                Posted:
                @Html.DisplayFor(model => model.Created)
            </p>

            <h1 class="big-text" id="myAboutMeHeader">
                @Html.DisplayFor(model => model.Title)
            </h1>

            <div class="lead">
                @*@Html.DisplayFor(model => model.Body)*@
                <p>@Html.Raw(Model.Body)</p>
            </div>

            <br />
            <p class="darkBrownText" style="font-weight: 500; font-size: 100%;">
                Updated:
                @Html.DisplayFor(model => model.UpdatedDate)
            </p>

        </div>
    }

    else
    {
        // image is available so format this way.
        <div class="col-sm-12 scrollimation fade-right d1" style="margin-left: 30px;">
            <img class="img-responsive polaroid" src="@Model.MediaUrl" alt="" />
        </div>


        <div class="row">
            <div class="col-sm-10 scrollimation fade-left d3" style="margin-left: 50px;">

                <p class="lead" style="font-weight: 500; font-size: 100%; margin-top: 50px;">
                    Posted:
                    @Html.DisplayFor(model => model.Created)
                </p>

                <h1 class="big-text" id="myAboutMeHeader">
                    @Html.DisplayFor(model => model.Title)
                </h1>

                <div class="lead">
                    @*@Html.DisplayFor(model => model.Body)*@
                    <p>@Html.Raw(Model.Body)</p>
                </div>

                <br />
                <p class="darkBrownText" style="font-weight: 500; font-size: 100%;">
                    Updated:
                    @Html.DisplayFor(model => model.UpdatedDate)
                </p>

            </div>
        </div>
    }

</div>


@if (User.IsInRole("Admin"))
{
    <div style="background-color: #ece3d6; margin: 5px -15px 15px -15px; padding-top: 15px; padding-bottom: 2px;">
        <dl class="dl-horizontal">

            <dt>
                @Html.DisplayNameFor(model => model.MediaUrl)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MediaUrl)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Published)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Published)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Slug)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Slug)
            </dd>

        </dl>
    </div>
}

<p style="margin: 5px 0px 50px 0px;">

    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Edit Post", "Edit", new { id = Model.Id }, new { @class = "editText" }) <span>|</span>
    }

    @Html.ActionLink("Back to List", "Index", null, new { @class = "backToListText"})

    @*Comments added*@
    @*// need form
        // tiny mce
        // submit view
        // postcontroller or you can use the commentscontroller
        // view/posts/details is where the comments will be displayed*@
    @*@Html.ActionLink("Add Comment", "Create", "Comments", new { BlogPostId = Model.Id }, new { @class = "backToListText" })*@
</p>

@*added with Mark*@
@using (Html.BeginForm("CreateComments", "Posts")) // way to grab data and send to backend.
{
    @Html.AntiForgeryToken()
    <h3>Comments</h3>
    <input type="number" name="BlogPostId" value="@Model.Id" hidden />
    <input type="text" name="Body" rows="7" required style="width: 300px;"/> // user must enter something.
    <input class="btn btn-primary" style="margin-top: 10px;" type="submit" value="Submit" />
    <hr style="border-color: #808080;"/>
}
@*added with Mark*@
@foreach (var comment in Model.Comments)
{
    if (comment != null && comment.AuthorId != null)
    {
        <p><span style="font-weight: 600">@comment.Body</span> - @comment.Author.FullName <br />@comment.CreationDate</p>
        
        <p style="margin: 0px 0px 0px 0px;">
            @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
            {
                @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "editText" }) <span>|</span>
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "editText" })
            }
        </p>

        <hr style="border-color: #808080;" />
    }

}