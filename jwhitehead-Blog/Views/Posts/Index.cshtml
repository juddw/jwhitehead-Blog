@*I in IEnumberable stands for Interface, allow for foreach loop to work. Enumerate.
    Interfaces only have the declarations
    model points to model folder.*@
@model IEnumerable<jwhitehead_Blog.Models.CodeFirst.Post>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
@if (User.IsInRole("Admin"))
{
    @Html.ActionLink("Create New", "Create")
}
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Body)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Created)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdatedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MediaUrl)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @{
                    var shortDescript = String.Concat(item.Body.Take(75));
                }
                @Html.Raw(shortDescript)...@*This removes html tags from the string.*@
                @*@Html.Raw(item.Body)*@  
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedDate)
            </td>
            <td>
                <img src="@item.MediaUrl" />
            </td>
            <td>
                @if (User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) <span>|</span>
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }) <span>|</span>
                }

                @Html.ActionLink("Details", "Details", new { slug = item.Slug })

            </td>
        </tr>
    }

</table>